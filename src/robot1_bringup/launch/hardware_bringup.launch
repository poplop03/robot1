<launch>
  <!-- robot description -->  
  <include file="$(find robot_description_v5)/launch/robot_des_from_robot.launch" />
  
  <!-- Launch IMU -->
  <include file="$(find imu_calib)/launch/imu_butterworth.launch" />

  <!-- Launch Hoverboard driver -->
  <include file="$(find hoverboard_driver)/launch/hoverboard.launch" />

  <!--Launch robot_localization-->
  <include file="$(find robot_localization)/launch/sensor_fuse.launch" />

  <!-- Launch lidar -->
  <include file="$(find ydlidar_ros_driver)/launch/lidar_ydlidarX3.launch" />

      <!-- Launch lidar cut -->
  <include file="$(find laser_filters)/launch/robot1_angle_filter.launch"/>

      <!-- Launch lidar merge -->
  <include file="$(find ira_laser_tools)/launch/laserscan_multi_merger.launch"/>
  
  <!-- Start kinect360 -->
  <include file="$(find openni_launch)/launch/openni.launch" >
    <arg name="depth_registration" value="true" />
  </include>
  
  <include file="$(find rgbd_to_pcl)/launch/rgbd_to_pcl.launch"/>

  <node pkg="nodelet" type="nodelet" name="voxel_manager" args="manager" output="screen"/>

  <node pkg="nodelet" type="nodelet" name="pcl_manager" args="manager" output="screen" />

  <!-- Run a VoxelGrid filter to clean NaNs and downsample the data -->
  <node pkg="nodelet" type="nodelet" name="voxel_grid" args="load pcl/VoxelGrid pcl_manager" output="screen">
    <remap from="~input" to="/points_xyz" />
    <remap from="~output" to="/points_xyz_downsampled" />
    <rosparam>
      filter_field_name: z
      filter_limit_min: 0.01
      filter_limit_max: 3
      filter_limit_negative: False
      leaf_size: 0.05
    </rosparam>
  </node>



    <!-- Launch Rosboard-->
  <include file="$(find rosboard)/launch/rosboard.launch" />
</launch>



